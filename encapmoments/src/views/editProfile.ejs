<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>개인정보 수정</title>
  <style>
    .profile-image-container {
      position: relative;
      width: 150px;
      height: 150px;
      margin-bottom: 10px;
    }

    .profile-image {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid #ccc;
      cursor: pointer;
    }

    .edit-icon {
      position: absolute;
      bottom: 10px;
      right: 10px;
      background: white;
      border-radius: 50%;
      padding: 5px;
      display: none;
    }

    .profile-image-container:hover .edit-icon {
      display: block;
    }

    .edit-icon img {
      width: 20px;
      height: 20px;
    }

    input[type="file"] {
      display: 1;
    }
  </style>
</head>
<body>
  <h1>개인정보 수정</h1>

  <form method="POST" action="/profile" enctype="multipart/form-data">
    <div class="profile-image-container" onclick="document.getElementById('fileInput').click();">
      <img
        src="<%= profile_image ? profile_image : '/default-profile.png' %>"
        alt="프로필 이미지"
        class="profile-image"
        id="previewImage"
      />
      <div class="edit-icon">
        <img src="/icons/pencil-icon.png" alt="수정 아이콘" />
      </div>
    </div>

    <input type="file" name="profile_image" id="fileInput" accept="image/*" onchange="previewFile(event)" /><br>

    <input type="text" name="nickname" placeholder="닉네임" value="<%= nickname %>"><br>
    <input type="email" name="email" placeholder="이메일" value="<%= email %>"><br>
    <input type="password" name="password" placeholder="비밀번호"><br>

    <button type="submit">수정</button>
  </form>

  <script>
    function previewFile(event) {
      const reader = new FileReader();
      reader.onload = function() {
        document.getElementById('previewImage').src = reader.result;
      };
      reader.readAsDataURL(event.target.files[0]);
    }
  </script>

  <h2>구성원 관리</h2>

  <div id="member-list">
    <% if (members && members.length > 0) { %>
      <% members.forEach(member => { %>
        <div>
          <img src="<%= member.member_image %>" alt="구성원 이미지" width="50" />
          <input type="text" value="<%= member.member_name %>" data-id="<%= member.id %>" class="member-name" />
          <input type="file" class="member-image-file" data-id="<%= member.id %>" accept="image/*" />
          <button onclick="updateMember(<%= member.id %>)">수정</button>
          <button onclick="deleteMember(<%= member.id %>)">삭제</button>
        </div>
      <% }); %>
    <% } else { %>
      <p>등록된 구성원이 없습니다.</p>
    <% } %>
  </div>

  <h3>구성원 추가</h3>
  <form id="add-member-form" enctype="multipart/form-data">
    <input type="text" id="newMemberName" name="member_name" placeholder="이름" required>
    <input type="file" id="newMemberImage" name="member_image" accept="image/*" required>
    <button type="submit">추가</button>
  </form>

  <script>
    // 구성원 추가
    document.getElementById("add-member-form").addEventListener("submit", async function(e) {
      e.preventDefault();
      const formData = new FormData();
      formData.append("member_name", document.getElementById("newMemberName").value);
      formData.append("member_image", document.getElementById("newMemberImage").files[0]);

      const res = await fetch("/family/members", {
        method: "POST",
        body: formData
      });

      const result = await res.json();
      alert(result.message);
      location.reload();
    });

    // 구성원 수정
    async function updateMember(id) {
      const nameInput = document.querySelector(`.member-name[data-id="${id}"]`);
      const imageInput = document.querySelector(`.member-image-file[data-id="${id}"]`);

      const formData = new FormData();
      formData.append("member_name", nameInput.value);
      if (imageInput.files.length > 0) {
        formData.append("member_image", imageInput.files[0]);
      }

      const res = await fetch(`/family/members/${id}`, {
        method: "PUT",
        body: formData
      });

      const result = await res.json();
      alert(result.message);
      location.reload();
    }

    // 구성원 삭제
    async function deleteMember(id) {
      if (!confirm("정말 삭제하시겠습니까?")) return;

      const res = await fetch(`/family/members/${id}`, {
        method: "DELETE"
      });

      const result = await res.json();
      alert(result.message);
      location.reload();
    }
  </script>
</body>
</html>

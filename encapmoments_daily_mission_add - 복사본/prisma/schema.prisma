generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"  // ← 명시적 설정
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model album {
  id          Int
  album_id    Int       @default(autoincrement())
  album_title String?   @db.VarChar(40)
  album_tag   String?   @db.VarChar(20)
  album_image String?   @db.VarChar(255)
  location    String?   @db.VarChar(50)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  uploaded_at DateTime? @default(now()) @db.Timestamp(0)

  @@id([album_id, id])
  @@index([id], map: "id")
}

model album_comment {
  id           Int
  album_id     Int
  comment_id   Int       @default(autoincrement())
  member_id    Int
  comment_text String    @db.Text
  commented_at DateTime? @default(now()) @db.Timestamp(0)

  @@id([comment_id, id, album_id])
  @@index([album_id, id], map: "album_id")
  @@index([member_id, id], map: "member_id")
}

model album_member {
  id           Int
  member_id    Int     @default(autoincrement())
  member_name  String  @db.VarChar(20)
  member_image String? @db.VarChar(255)

  @@id([member_id, id])
  @@index([id], map: "id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model daily_mission {
  id                Int
  daily_id          Int       @default(autoincrement())
  pool_id           Int
  daily_image       String?   @db.VarChar(255)
  daily_title       String?   @db.VarChar(40)
  daily_description String?   @db.VarChar(1000)
  reward            Int?      @default(100)
  is_completed      Boolean?  @default(false)
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  expires_at        DateTime  @db.DateTime(0)

  @@id([daily_id, id])
  @@index([id], map: "id")
  @@index([pool_id], map: "pool_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model daily_mission_pool {
  pool_id           Int     @id @default(autoincrement())
  daily_image       String? @db.VarChar(255)
  daily_title       String? @db.VarChar(40)
  daily_description String? @db.VarChar(1000)
  reward            Int?    @default(100)
}

model profile {
  id            Int     @id
  nickname      String? @db.VarChar(50)
  profile_image String? @db.VarChar(255)
  points        Int?    @default(0)
}

model user {
  id                  Int       @id @default(autoincrement())
  email               String?   @unique(map: "email") @db.VarChar(255)
  password            String?   @db.VarChar(255)
  kakao_id            BigInt?   @db.UnsignedBigInt
  kakao_access_code   String?   @db.VarChar(64)
  kakao_refresh_code  String?   @db.VarChar(64)
  kakao_id_token      String?   @db.Text
  google_id           String?   @db.VarChar(255)
  google_id_token     String?   @db.Text
  google_access_code  String?   @db.VarChar(100)
  google_refresh_code String?   @db.VarChar(100)
  naver_id            String?   @db.VarChar(255)
  naver_id_token      String?   @db.Text
  naver_access_code   String?   @db.VarChar(100)
  naver_refresh_code  String?   @db.VarChar(100)
  created_at          DateTime? @default(now()) @db.Timestamp(0)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model weekly_mission {
  id                 Int
  weekly_id          Int       @default(autoincrement())
  weekly_image       String?   @db.VarChar(255)
  weekly_title       String?   @db.VarChar(40)
  weekly_description String?   @db.VarChar(1000)
  reward             Int?      @default(100)
  is_completed       Boolean?  @default(false)
  created_at         DateTime? @default(now()) @db.Timestamp(0)
  expires_at         DateTime  @db.DateTime(0)

  @@id([weekly_id, id])
  @@index([id], map: "id")
}
